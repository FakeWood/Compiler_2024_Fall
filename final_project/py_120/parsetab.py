
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL_VAL DEFINE DIVIDE EQUAL FUN GREATER ID IF LPAREN MINUS MODULUS MULTIPLY NOT NUMBER OR PLUS PRINT_BOOL PRINT_NUM RPAREN SMALLERprogram : stmt_liststmt_list : stmt\n                 | stmt stmt_liststmt : expr\n            | def_stmt\n            | print_stmtprint_stmt : LPAREN PRINT_NUM expr RPAREN\n                  | LPAREN PRINT_BOOL expr RPARENexpr : BOOL_VAL\n           | NUMBER\n           | ID\n           | num_op\n           | logical_op\n           | func_expr\n           | func_call\n           | if_exprnum_op : LPAREN PLUS expr expr_list RPAREN\n              | LPAREN MINUS expr expr RPAREN\n              | LPAREN MULTIPLY expr expr_list RPAREN\n              | LPAREN DIVIDE expr expr RPAREN\n              | LPAREN MODULUS expr expr RPAREN\n              | LPAREN GREATER expr expr RPAREN\n              | LPAREN SMALLER expr expr RPAREN\n              | LPAREN EQUAL expr expr_list RPARENexpr_list : expr\n                | expr expr_listlogical_op : LPAREN AND expr expr_list RPAREN\n                  | LPAREN OR expr expr_list RPAREN\n                  | LPAREN NOT expr RPARENdef_stmt : LPAREN DEFINE ID expr RPARENfunc_expr : LPAREN FUN LPAREN func_params RPAREN func_body RPARENfunc_params : \n               | ID func_paramsfunc_body : expr\n                | def_stmt exprfunc_call : LPAREN func_expr param_list RPAREN\n                | LPAREN ID param_list RPARENparam_list : \n                  | param param_listparam : exprif_expr : LPAREN IF expr expr expr RPAREN'
    
_lr_action_items = {'BOOL_VAL':([0,3,4,5,6,7,8,9,10,11,12,13,14,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,39,40,43,44,45,46,47,48,49,50,51,52,56,58,60,61,62,73,76,77,78,80,81,82,83,84,85,86,87,88,89,90,96,97,98,],[7,7,-4,-5,-6,-9,-10,-11,-12,-13,-14,-15,-16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-40,7,7,7,7,7,7,7,7,7,7,7,-37,-7,-8,7,-29,-36,7,-30,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,7,7,-41,-31,]),'NUMBER':([0,3,4,5,6,7,8,9,10,11,12,13,14,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,39,40,43,44,45,46,47,48,49,50,51,52,56,58,60,61,62,73,76,77,78,80,81,82,83,84,85,86,87,88,89,90,96,97,98,],[8,8,-4,-5,-6,-9,-10,-11,-12,-13,-14,-15,-16,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-40,8,8,8,8,8,8,8,8,8,8,8,-37,-7,-8,8,-29,-36,8,-30,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,8,8,-41,-31,]),'ID':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,39,40,43,44,45,46,47,48,49,50,51,52,54,56,58,60,61,62,73,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,],[9,9,-4,-5,-6,-9,-10,-11,-12,-13,-14,-15,-16,19,36,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,19,9,-40,9,9,9,9,9,9,9,9,9,9,75,9,-37,-7,-8,9,-29,75,-36,9,-30,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,9,19,9,-41,-31,]),'LPAREN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,43,44,45,46,47,48,49,50,51,52,56,58,60,61,62,73,76,77,78,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,],[15,15,-4,-5,-6,-9,-10,-11,-12,-13,-14,-15,-16,17,37,37,37,37,37,37,37,37,37,37,37,37,37,37,54,37,37,37,17,37,-40,37,37,37,37,37,37,37,37,37,37,37,-37,-7,-8,37,-29,-36,37,-30,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,93,17,37,-41,-31,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,58,60,61,73,76,78,80,81,82,83,84,85,86,87,88,89,97,98,],[0,-1,-2,-4,-5,-6,-9,-10,-11,-12,-13,-14,-15,-16,-3,-37,-7,-8,-29,-36,-30,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-41,-31,]),'RPAREN':([7,8,9,10,11,12,13,14,19,34,38,39,40,41,42,53,54,55,57,58,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,91,92,94,95,97,98,99,],[-9,-10,-11,-12,-13,-14,-15,-16,-38,-38,58,-38,-40,60,61,73,-32,76,78,-37,-39,-25,80,81,82,83,84,85,86,87,88,89,-29,90,-32,-36,-26,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-33,97,98,-34,-41,-31,-35,]),'DEFINE':([15,93,],[18,18,]),'PRINT_NUM':([15,],[20,]),'PRINT_BOOL':([15,],[21,]),'PLUS':([15,37,93,],[22,22,22,]),'MINUS':([15,37,93,],[23,23,23,]),'MULTIPLY':([15,37,93,],[24,24,24,]),'DIVIDE':([15,37,93,],[25,25,25,]),'MODULUS':([15,37,93,],[26,26,26,]),'GREATER':([15,37,93,],[27,27,27,]),'SMALLER':([15,37,93,],[28,28,28,]),'EQUAL':([15,37,93,],[29,29,29,]),'AND':([15,37,93,],[30,30,30,]),'OR':([15,37,93,],[31,31,31,]),'NOT':([15,37,93,],[32,32,32,]),'FUN':([15,17,37,93,],[33,33,33,33,]),'IF':([15,37,93,],[35,35,35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stmt_list':([0,3,],[2,16,]),'stmt':([0,3,],[3,3,]),'expr':([0,3,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,39,43,44,45,46,47,48,49,50,51,52,56,62,77,90,96,],[4,4,40,41,42,43,44,45,46,47,48,49,50,51,52,53,40,56,57,40,62,64,62,66,67,68,69,62,62,62,77,62,92,95,99,]),'def_stmt':([0,3,90,],[5,5,96,]),'print_stmt':([0,3,],[6,6,]),'num_op':([0,3,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,39,43,44,45,46,47,48,49,50,51,52,56,62,77,90,96,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'logical_op':([0,3,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,39,43,44,45,46,47,48,49,50,51,52,56,62,77,90,96,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'func_expr':([0,3,15,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,39,43,44,45,46,47,48,49,50,51,52,56,62,77,90,93,96,],[12,12,34,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,34,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,34,12,]),'func_call':([0,3,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,39,43,44,45,46,47,48,49,50,51,52,56,62,77,90,96,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'if_expr':([0,3,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,39,43,44,45,46,47,48,49,50,51,52,56,62,77,90,96,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'param_list':([19,34,39,],[38,55,59,]),'param':([19,34,39,],[39,39,39,]),'expr_list':([43,45,50,51,52,62,],[63,65,70,71,72,79,]),'func_params':([54,75,],[74,91,]),'func_body':([90,],[94,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt_list','program',1,'p_program','final_yacc.py',140),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','final_yacc.py',144),
  ('stmt_list -> stmt stmt_list','stmt_list',2,'p_stmt_list','final_yacc.py',145),
  ('stmt -> expr','stmt',1,'p_stmt','final_yacc.py',149),
  ('stmt -> def_stmt','stmt',1,'p_stmt','final_yacc.py',150),
  ('stmt -> print_stmt','stmt',1,'p_stmt','final_yacc.py',151),
  ('print_stmt -> LPAREN PRINT_NUM expr RPAREN','print_stmt',4,'p_print_stmt','final_yacc.py',155),
  ('print_stmt -> LPAREN PRINT_BOOL expr RPAREN','print_stmt',4,'p_print_stmt','final_yacc.py',156),
  ('expr -> BOOL_VAL','expr',1,'p_exp','final_yacc.py',160),
  ('expr -> NUMBER','expr',1,'p_exp','final_yacc.py',161),
  ('expr -> ID','expr',1,'p_exp','final_yacc.py',162),
  ('expr -> num_op','expr',1,'p_exp','final_yacc.py',163),
  ('expr -> logical_op','expr',1,'p_exp','final_yacc.py',164),
  ('expr -> func_expr','expr',1,'p_exp','final_yacc.py',165),
  ('expr -> func_call','expr',1,'p_exp','final_yacc.py',166),
  ('expr -> if_expr','expr',1,'p_exp','final_yacc.py',167),
  ('num_op -> LPAREN PLUS expr expr_list RPAREN','num_op',5,'p_num_op','final_yacc.py',171),
  ('num_op -> LPAREN MINUS expr expr RPAREN','num_op',5,'p_num_op','final_yacc.py',172),
  ('num_op -> LPAREN MULTIPLY expr expr_list RPAREN','num_op',5,'p_num_op','final_yacc.py',173),
  ('num_op -> LPAREN DIVIDE expr expr RPAREN','num_op',5,'p_num_op','final_yacc.py',174),
  ('num_op -> LPAREN MODULUS expr expr RPAREN','num_op',5,'p_num_op','final_yacc.py',175),
  ('num_op -> LPAREN GREATER expr expr RPAREN','num_op',5,'p_num_op','final_yacc.py',176),
  ('num_op -> LPAREN SMALLER expr expr RPAREN','num_op',5,'p_num_op','final_yacc.py',177),
  ('num_op -> LPAREN EQUAL expr expr_list RPAREN','num_op',5,'p_num_op','final_yacc.py',178),
  ('expr_list -> expr','expr_list',1,'p_exp_list','final_yacc.py',185),
  ('expr_list -> expr expr_list','expr_list',2,'p_exp_list','final_yacc.py',186),
  ('logical_op -> LPAREN AND expr expr_list RPAREN','logical_op',5,'p_logical_op','final_yacc.py',190),
  ('logical_op -> LPAREN OR expr expr_list RPAREN','logical_op',5,'p_logical_op','final_yacc.py',191),
  ('logical_op -> LPAREN NOT expr RPAREN','logical_op',4,'p_logical_op','final_yacc.py',192),
  ('def_stmt -> LPAREN DEFINE ID expr RPAREN','def_stmt',5,'p_def_stmt','final_yacc.py',201),
  ('func_expr -> LPAREN FUN LPAREN func_params RPAREN func_body RPAREN','func_expr',7,'p_fun_exp','final_yacc.py',206),
  ('func_params -> <empty>','func_params',0,'p_fun_ids','final_yacc.py',210),
  ('func_params -> ID func_params','func_params',2,'p_fun_ids','final_yacc.py',211),
  ('func_body -> expr','func_body',1,'p_fun_body','final_yacc.py',218),
  ('func_body -> def_stmt expr','func_body',2,'p_fun_body','final_yacc.py',219),
  ('func_call -> LPAREN func_expr param_list RPAREN','func_call',4,'p_fun_call','final_yacc.py',226),
  ('func_call -> LPAREN ID param_list RPAREN','func_call',4,'p_fun_call','final_yacc.py',227),
  ('param_list -> <empty>','param_list',0,'p_param_list','final_yacc.py',234),
  ('param_list -> param param_list','param_list',2,'p_param_list','final_yacc.py',235),
  ('param -> expr','param',1,'p_param','final_yacc.py',242),
  ('if_expr -> LPAREN IF expr expr expr RPAREN','if_expr',6,'p_if_exp','final_yacc.py',247),
]
